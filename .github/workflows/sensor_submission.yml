name: Sensor Submission

on:
  issues:
    types: [opened, edited]

jobs:
  create_pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract issue details
        id: info
        run: |
          VENDOR=$(echo "${{ github.event.issue.body }}" | awk '/### Vendor/{getline; getline; print; exit}')
          if [ "$VENDOR" == "Other" ]; then
            VENDOR=$(echo "${{ github.event.issue.body }}" | awk '/### Other Vendor/{getline; getline; print; exit}')
          fi
          echo "vendor<<EOF" >> $GITHUB_ENV
          echo "$VENDOR" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          CAMERA=$(echo "${{ github.event.issue.body }}" | awk '/### Vendor/{getline; getline; print; exit}')
          echo "camera<<EOF" >> $GITHUB_ENV
          echo "$CAMERA" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Debug extracted data
        run: |
          echo "Event Body: ${{ github.event.issue.body }}"
          echo "Vendor: ${{ env.vendor }}"
          echo "Camera: ${{ env.camera }}"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Process and update JSON with Python
        continue-on-error: true
        run: |
          pip install -r ./scripts/requirements.txt
          python3 ./scripts/update_sensors_and_generatee_json.py "${{ github.event.issue.body }}"
          if [ $? -ne 0 ]; then
            echo "update_json_error<<EOF" >> $GITHUB_ENV
              cat $ERROR_FILE >> $GITHUB_ENV
              echo "EOF" >> $GITHUB_ENV
              exit 1
            fi

      - name: Generate csv
        continue-on-error: true
        run: |
          python3 scripts/generate_csv.py
          if [ $? -ne 0 ]; then
            echo "generate_csv_error<<EOF" >> $GITHUB_ENV
              cat $ERROR_FILE >> $GITHUB_ENV
              echo "EOF" >> $GITHUB_ENV
              exit 1
            fi

      - name: Generate csv
        continue-on-error: true
        run: |
          python3 scripts/generate_csv.py
          if [ $? -ne 0 ]; then
            echo "generate_csv_error<<EOF" >> $GITHUB_ENV
              cat $ERROR_FILE >> $GITHUB_ENV
              echo "EOF" >> $GITHUB_ENV
              exit 1
            fi

      - name: Generate yaml
        continue-on-error: true
        run: |
          python3 scripts/generate_yaml.py
          if [ $? -ne 0 ]; then
            echo "generate_yaml_error<<EOF" >> $GITHUB_ENV
              cat $ERROR_FILE >> $GITHUB_ENV
              echo "EOF" >> $GITHUB_ENV
              exit 1
            fi

      - name: Generate markdown/documentation
        continue-on-error: true
        run: |
          python3 scripts/generate_markdown.py
          if [ $? -ne 0 ]; then
            echo "generate_markdown_error<<EOF" >> $GITHUB_ENV
            cat $ERROR_FILE >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
            exit 1
          fi

      - name: Create a safe branch name
        run: |
          name=$(echo '${{ github.event.issue.title }}' | tr ' ' '_' | tr -cd '[:alnum:]_')
          echo "branch_name=${name}" >> $GITHUB_ENV


      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PAT }}
          commit-message: New sensor data for ${{ env.camera }} - ${{ env.vendor }}
          labels: submission
          branch: ${{ env.branch_name }}
          branch-suffix: timestamp
          title: ${{ github.event.issue.title }}
          body: |
            This pull request adds new sensor data for the camera ${{ env.camera }} by ${{ env.vendor }}

            Closes #${{ github.event.issue.number }}

            ${{ github.event.issue.body }}


      - name: Comment on Issue if Python scripts fail
        if: ${{ failure() }}
        uses: actions/github-script@v6
        with:
          script: |
            const issueNumber = ${{ github.event.issue.number }};
            const errors = [];
            if (process.env.update_json_error) {
              errors.push(`Error in update_sensors.py:\n${process.env.update_json_error}`);
            }
            if (process.env.generate_csv_error) {
              errors.push(`Error in generate_csv.py:\n${process.env.generate_csv_error}`);
            }
            if (process.env.generate_yaml_error) {
              errors.push(`Error in generate_yaml.py:\n${process.env.generate_yaml_error}`);
            }
            if (process.env.generate_markdown_error) {
              errors.push(`Error in generate_markdown.py:\n${process.env.generate_markdown_error}`);
            }
            const commentBody = `There was an error processing the sensor data:\n\n${errors.join('\n\n')}`;

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: commentBody
            });