name: Sensor Submission

on:
  issues:
    types: [opened]

jobs:
  process_submission:
    runs-on: ubuntu-latest

    outputs:
      vendor: ${{ steps.extract_details.outputs.vendor }}
      custom_vendor: ${{ steps.extract_details.outputs.custom_vendor }}
      camera: ${{ steps.extract_details.outputs.camera }}
      resolution_type: ${{ steps.extract_details.outputs.resolution_type }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract issue details
        id: extract_details
        run: |
          echo "::set-output name=vendor::$(echo "${{ github.event.issue.body }}" | awk '/### Vendor/{flag=1;next}/^###/{flag=0}flag' | tail -n +2)"
          echo "::set-output name=custom_vendor::$(echo "${{ github.event.issue.body }}" | awk '/### Custom Vendor/{flag=1;next}/^###/{flag=0}flag' | tail -n +2)"
          echo "::set-output name=camera::$(echo "${{ github.event.issue.body }}" | awk '/### Camera/{flag=1;next}/^###/{flag=0}flag' | tail -n +2)"
          echo "::set-output name=resolution_type::$(echo "${{ github.event.issue.body }}" | awk '/### Resolution Type/{flag=1;next}/^###/{flag=0}flag' | tail -n +2)"

  process_data:
    needs: process_submission
    runs-on: ubuntu-latest

    steps:
      - name: Debug extracted data
        run: |
          echo "Event Body: ${{ github.event.issue.body }}"
          echo "Vendor: ${{ needs.process_submission.outputs.vendor }}"
          echo "Custom Vendor: ${{ needs.process_submission.outputs.custom_vendor }}"
          echo "Camera: ${{ needs.process_submission.outputs.camera }}"
          echo "Resolution Type: ${{ needs.process_submission.outputs.resolution_type }}"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Process and update JSON
        run: |
          VENDOR="${{ needs.process_submission.outputs.vendor }}"
          CUSTOM_VENDOR="${{ needs.process_submission.outputs.custom_vendor }}"
          CAMERA="${{ needs.process_submission.outputs.camera }}"
          RESOLUTION_TYPE="${{ needs.process_submission.outputs.resolution_type }}"

          if [ "$VENDOR" == "Custom" ]; then
            VENDOR="$CUSTOM_VENDOR"
          fi

          if [ -z "$VENDOR" ] || [ -z "$CAMERA" ] || [ -z "$RESOLUTION_TYPE" ]; then
            echo "Missing required fields."
            exit 1
          fi

          # Convert the resolution types to JSON format
          RESOLUTION_JSON=$(echo "$RESOLUTION_TYPE" | python3 -c "
            import sys, json
            data = sys.stdin.read()
            resolutions = []
            for block in data.strip().split('\\n\\n'):
                resolution = {}
                for line in block.strip().split('\\n'):
                    if ':' in line:
                        key, value = [x.strip() for x in line.split(':', 1)]
                        if key.lower() in ['resolution', 'mm', 'inch']:
                            width, height = [float(x) for x in value.split('x')]
                            resolution[key.lower()] = {'width': width, 'height': height}
                        elif key.lower() == 'type':
                            resolution['type'] = value
                        else:
                            resolution[key.lower().replace(' ', '_')] = value
                resolutions.append(resolution)
            print(json.dumps(resolutions, indent=2))
          ")

          # Ensure sensors.json exists and is initialized
          touch sensors.json

          # Update sensors.json with jq
          jq -n --arg vendor "$VENDOR" --arg camera "$CAMERA" --argjson resolutions "$RESOLUTION_JSON" '
          (input // {}) as $json |
          ($json[$vendor] //= {}) |
          ($json[$vendor][$camera] //= {}) |
          reduce ($resolutions[] | .type) as $type (.; .[$vendor][$camera][$type] = $resolutions[] | select(.type == $type))' sensors.json > sensors_tmp.json

          mv sensors_tmp.json sensors.json

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: New sensor data for ${{ needs.process_submission.outputs.camera }} - ${{ needs.process_submission.outputs.vendor }}
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          title: 'New sensor: ${{ needs.process_submission.outputs.vendor }} - ${{ needs.process_submission.outputs.camera }}'
          body: |
            This pull request adds new sensor data for the camera ${{ needs.process_submission.outputs.camera }} by ${{ needs.process_submission.outputs.vendor }}.

            ${{ github.event.issue.body }}
          labels: submission
